---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: provider-service
  namespace: akash-services
  labels:
    app.kubernetes.io/name: provider
    app.kubernetes.io/instance: provider-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: provider
      app.kubernetes.io/instance: provider-service
      app.kubernetes.io/component: operator
      app.kubernetes.io/part-of: provider
  template:
    metadata:
      labels:
        app.kubernetes.io/name: provider
        app.kubernetes.io/instance: provider-service
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: provider
    spec:
      serviceAccountName: akash-provider
      volumes:
        - name: boot
          configMap:
            name: provider-boot
        - name: keys
          secret:
            secretName: provider-keys
        - name: home
          emptyDir: {}
      initContainers:
        - name: provider-import-keys
          image: ghcr.io/akash-network/node:stable
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "/boot/run.sh"]
          envFrom:
            - configMapRef:
                name: provider-client-config
          env:
            # location of key export. must contain two files:
            # key.txt:      exported wallet key
            # key-pass.txt: password used to encrypt exported key
            - name: AKASH_BOOT_KEYS
              value: /boot-keys
          volumeMounts:
            - name: boot
              mountPath: /boot
              readOnly: true
            - name: keys
              mountPath: /boot-keys
              readOnly: true
            - name: home
              mountPath: /home
      containers:
        - name: provider-service
          image: ghcr.io/akash-network/provider:stable
          imagePullPolicy: IfNotPresent
          args:
            - provider-services
            - run
          envFrom:
            - configMapRef:
                name: provider-client-config
            - configMapRef:
                name: provider-config
          env:
            - name: AP_AUTH_PEM
              valueFrom:
                secretKeyRef:
                  name: provider-keys
                  key: provider-cert.pem
          ports:
            - name: gateway
              containerPort: 8443
            - name: grpc
              containerPort: 8444
          volumeMounts:
            - name: home
              mountPath: /home
