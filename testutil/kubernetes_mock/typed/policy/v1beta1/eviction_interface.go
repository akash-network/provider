// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	v1beta1 "k8s.io/api/policy/v1beta1"
)

// EvictionInterface is an autogenerated mock type for the EvictionInterface type
type EvictionInterface struct {
	mock.Mock
}

type EvictionInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *EvictionInterface) EXPECT() *EvictionInterface_Expecter {
	return &EvictionInterface_Expecter{mock: &_m.Mock}
}

// Evict provides a mock function with given fields: ctx, eviction
func (_m *EvictionInterface) Evict(ctx context.Context, eviction *v1beta1.Eviction) error {
	ret := _m.Called(ctx, eviction)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1beta1.Eviction) error); ok {
		r0 = rf(ctx, eviction)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EvictionInterface_Evict_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Evict'
type EvictionInterface_Evict_Call struct {
	*mock.Call
}

// Evict is a helper method to define mock.On call
//   - ctx context.Context
//   - eviction *v1beta1.Eviction
func (_e *EvictionInterface_Expecter) Evict(ctx interface{}, eviction interface{}) *EvictionInterface_Evict_Call {
	return &EvictionInterface_Evict_Call{Call: _e.mock.On("Evict", ctx, eviction)}
}

func (_c *EvictionInterface_Evict_Call) Run(run func(ctx context.Context, eviction *v1beta1.Eviction)) *EvictionInterface_Evict_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v1beta1.Eviction))
	})
	return _c
}

func (_c *EvictionInterface_Evict_Call) Return(_a0 error) *EvictionInterface_Evict_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EvictionInterface_Evict_Call) RunAndReturn(run func(context.Context, *v1beta1.Eviction) error) *EvictionInterface_Evict_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewEvictionInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewEvictionInterface creates a new instance of EvictionInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEvictionInterface(t mockConstructorTestingTNewEvictionInterface) *EvictionInterface {
	mock := &EvictionInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
