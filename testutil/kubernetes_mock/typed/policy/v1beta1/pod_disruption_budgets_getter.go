// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1beta1 "k8s.io/client-go/kubernetes/typed/policy/v1beta1"
)

// PodDisruptionBudgetsGetter is an autogenerated mock type for the PodDisruptionBudgetsGetter type
type PodDisruptionBudgetsGetter struct {
	mock.Mock
}

type PodDisruptionBudgetsGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *PodDisruptionBudgetsGetter) EXPECT() *PodDisruptionBudgetsGetter_Expecter {
	return &PodDisruptionBudgetsGetter_Expecter{mock: &_m.Mock}
}

// PodDisruptionBudgets provides a mock function with given fields: namespace
func (_m *PodDisruptionBudgetsGetter) PodDisruptionBudgets(namespace string) v1beta1.PodDisruptionBudgetInterface {
	ret := _m.Called(namespace)

	var r0 v1beta1.PodDisruptionBudgetInterface
	if rf, ok := ret.Get(0).(func(string) v1beta1.PodDisruptionBudgetInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.PodDisruptionBudgetInterface)
		}
	}

	return r0
}

// PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PodDisruptionBudgets'
type PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call struct {
	*mock.Call
}

// PodDisruptionBudgets is a helper method to define mock.On call
//   - namespace string
func (_e *PodDisruptionBudgetsGetter_Expecter) PodDisruptionBudgets(namespace interface{}) *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call {
	return &PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call{Call: _e.mock.On("PodDisruptionBudgets", namespace)}
}

func (_c *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call) Run(run func(namespace string)) *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call) Return(_a0 v1beta1.PodDisruptionBudgetInterface) *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call) RunAndReturn(run func(string) v1beta1.PodDisruptionBudgetInterface) *PodDisruptionBudgetsGetter_PodDisruptionBudgets_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewPodDisruptionBudgetsGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewPodDisruptionBudgetsGetter creates a new instance of PodDisruptionBudgetsGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPodDisruptionBudgetsGetter(t mockConstructorTestingTNewPodDisruptionBudgetsGetter) *PodDisruptionBudgetsGetter {
	mock := &PodDisruptionBudgetsGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
