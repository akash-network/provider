// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1beta1 "k8s.io/client-go/kubernetes/typed/flowcontrol/v1beta1"
)

// FlowSchemasGetter is an autogenerated mock type for the FlowSchemasGetter type
type FlowSchemasGetter struct {
	mock.Mock
}

type FlowSchemasGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *FlowSchemasGetter) EXPECT() *FlowSchemasGetter_Expecter {
	return &FlowSchemasGetter_Expecter{mock: &_m.Mock}
}

// FlowSchemas provides a mock function with given fields:
func (_m *FlowSchemasGetter) FlowSchemas() v1beta1.FlowSchemaInterface {
	ret := _m.Called()

	var r0 v1beta1.FlowSchemaInterface
	if rf, ok := ret.Get(0).(func() v1beta1.FlowSchemaInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.FlowSchemaInterface)
		}
	}

	return r0
}

// FlowSchemasGetter_FlowSchemas_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FlowSchemas'
type FlowSchemasGetter_FlowSchemas_Call struct {
	*mock.Call
}

// FlowSchemas is a helper method to define mock.On call
func (_e *FlowSchemasGetter_Expecter) FlowSchemas() *FlowSchemasGetter_FlowSchemas_Call {
	return &FlowSchemasGetter_FlowSchemas_Call{Call: _e.mock.On("FlowSchemas")}
}

func (_c *FlowSchemasGetter_FlowSchemas_Call) Run(run func()) *FlowSchemasGetter_FlowSchemas_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *FlowSchemasGetter_FlowSchemas_Call) Return(_a0 v1beta1.FlowSchemaInterface) *FlowSchemasGetter_FlowSchemas_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlowSchemasGetter_FlowSchemas_Call) RunAndReturn(run func() v1beta1.FlowSchemaInterface) *FlowSchemasGetter_FlowSchemas_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewFlowSchemasGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewFlowSchemasGetter creates a new instance of FlowSchemasGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFlowSchemasGetter(t mockConstructorTestingTNewFlowSchemasGetter) *FlowSchemasGetter {
	mock := &FlowSchemasGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
