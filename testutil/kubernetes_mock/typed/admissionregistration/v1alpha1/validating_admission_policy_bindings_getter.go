// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1alpha1 "k8s.io/client-go/kubernetes/typed/admissionregistration/v1alpha1"
)

// ValidatingAdmissionPolicyBindingsGetter is an autogenerated mock type for the ValidatingAdmissionPolicyBindingsGetter type
type ValidatingAdmissionPolicyBindingsGetter struct {
	mock.Mock
}

type ValidatingAdmissionPolicyBindingsGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *ValidatingAdmissionPolicyBindingsGetter) EXPECT() *ValidatingAdmissionPolicyBindingsGetter_Expecter {
	return &ValidatingAdmissionPolicyBindingsGetter_Expecter{mock: &_m.Mock}
}

// ValidatingAdmissionPolicyBindings provides a mock function with given fields:
func (_m *ValidatingAdmissionPolicyBindingsGetter) ValidatingAdmissionPolicyBindings() v1alpha1.ValidatingAdmissionPolicyBindingInterface {
	ret := _m.Called()

	var r0 v1alpha1.ValidatingAdmissionPolicyBindingInterface
	if rf, ok := ret.Get(0).(func() v1alpha1.ValidatingAdmissionPolicyBindingInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.ValidatingAdmissionPolicyBindingInterface)
		}
	}

	return r0
}

// ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidatingAdmissionPolicyBindings'
type ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call struct {
	*mock.Call
}

// ValidatingAdmissionPolicyBindings is a helper method to define mock.On call
func (_e *ValidatingAdmissionPolicyBindingsGetter_Expecter) ValidatingAdmissionPolicyBindings() *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call {
	return &ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call{Call: _e.mock.On("ValidatingAdmissionPolicyBindings")}
}

func (_c *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call) Run(run func()) *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call) Return(_a0 v1alpha1.ValidatingAdmissionPolicyBindingInterface) *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call) RunAndReturn(run func() v1alpha1.ValidatingAdmissionPolicyBindingInterface) *ValidatingAdmissionPolicyBindingsGetter_ValidatingAdmissionPolicyBindings_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewValidatingAdmissionPolicyBindingsGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidatingAdmissionPolicyBindingsGetter creates a new instance of ValidatingAdmissionPolicyBindingsGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidatingAdmissionPolicyBindingsGetter(t mockConstructorTestingTNewValidatingAdmissionPolicyBindingsGetter) *ValidatingAdmissionPolicyBindingsGetter {
	mock := &ValidatingAdmissionPolicyBindingsGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
