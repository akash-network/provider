// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1alpha1 "k8s.io/client-go/kubernetes/typed/admissionregistration/v1alpha1"
)

// ValidatingAdmissionPoliciesGetter is an autogenerated mock type for the ValidatingAdmissionPoliciesGetter type
type ValidatingAdmissionPoliciesGetter struct {
	mock.Mock
}

type ValidatingAdmissionPoliciesGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *ValidatingAdmissionPoliciesGetter) EXPECT() *ValidatingAdmissionPoliciesGetter_Expecter {
	return &ValidatingAdmissionPoliciesGetter_Expecter{mock: &_m.Mock}
}

// ValidatingAdmissionPolicies provides a mock function with given fields:
func (_m *ValidatingAdmissionPoliciesGetter) ValidatingAdmissionPolicies() v1alpha1.ValidatingAdmissionPolicyInterface {
	ret := _m.Called()

	var r0 v1alpha1.ValidatingAdmissionPolicyInterface
	if rf, ok := ret.Get(0).(func() v1alpha1.ValidatingAdmissionPolicyInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.ValidatingAdmissionPolicyInterface)
		}
	}

	return r0
}

// ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidatingAdmissionPolicies'
type ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call struct {
	*mock.Call
}

// ValidatingAdmissionPolicies is a helper method to define mock.On call
func (_e *ValidatingAdmissionPoliciesGetter_Expecter) ValidatingAdmissionPolicies() *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call {
	return &ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call{Call: _e.mock.On("ValidatingAdmissionPolicies")}
}

func (_c *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call) Run(run func()) *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call) Return(_a0 v1alpha1.ValidatingAdmissionPolicyInterface) *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call) RunAndReturn(run func() v1alpha1.ValidatingAdmissionPolicyInterface) *ValidatingAdmissionPoliciesGetter_ValidatingAdmissionPolicies_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewValidatingAdmissionPoliciesGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidatingAdmissionPoliciesGetter creates a new instance of ValidatingAdmissionPoliciesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidatingAdmissionPoliciesGetter(t mockConstructorTestingTNewValidatingAdmissionPoliciesGetter) *ValidatingAdmissionPoliciesGetter {
	mock := &ValidatingAdmissionPoliciesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
