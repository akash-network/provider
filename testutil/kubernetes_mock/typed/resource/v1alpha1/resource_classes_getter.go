// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1alpha1 "k8s.io/client-go/kubernetes/typed/resource/v1alpha1"
)

// ResourceClassesGetter is an autogenerated mock type for the ResourceClassesGetter type
type ResourceClassesGetter struct {
	mock.Mock
}

type ResourceClassesGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *ResourceClassesGetter) EXPECT() *ResourceClassesGetter_Expecter {
	return &ResourceClassesGetter_Expecter{mock: &_m.Mock}
}

// ResourceClasses provides a mock function with given fields:
func (_m *ResourceClassesGetter) ResourceClasses() v1alpha1.ResourceClassInterface {
	ret := _m.Called()

	var r0 v1alpha1.ResourceClassInterface
	if rf, ok := ret.Get(0).(func() v1alpha1.ResourceClassInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.ResourceClassInterface)
		}
	}

	return r0
}

// ResourceClassesGetter_ResourceClasses_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ResourceClasses'
type ResourceClassesGetter_ResourceClasses_Call struct {
	*mock.Call
}

// ResourceClasses is a helper method to define mock.On call
func (_e *ResourceClassesGetter_Expecter) ResourceClasses() *ResourceClassesGetter_ResourceClasses_Call {
	return &ResourceClassesGetter_ResourceClasses_Call{Call: _e.mock.On("ResourceClasses")}
}

func (_c *ResourceClassesGetter_ResourceClasses_Call) Run(run func()) *ResourceClassesGetter_ResourceClasses_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ResourceClassesGetter_ResourceClasses_Call) Return(_a0 v1alpha1.ResourceClassInterface) *ResourceClassesGetter_ResourceClasses_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ResourceClassesGetter_ResourceClasses_Call) RunAndReturn(run func() v1alpha1.ResourceClassInterface) *ResourceClassesGetter_ResourceClasses_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewResourceClassesGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewResourceClassesGetter creates a new instance of ResourceClassesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResourceClassesGetter(t mockConstructorTestingTNewResourceClassesGetter) *ResourceClassesGetter {
	mock := &ResourceClassesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
