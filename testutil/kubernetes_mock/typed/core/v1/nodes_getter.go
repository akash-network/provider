// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/client-go/kubernetes/typed/core/v1"
)

// NodesGetter is an autogenerated mock type for the NodesGetter type
type NodesGetter struct {
	mock.Mock
}

type NodesGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *NodesGetter) EXPECT() *NodesGetter_Expecter {
	return &NodesGetter_Expecter{mock: &_m.Mock}
}

// Nodes provides a mock function with given fields:
func (_m *NodesGetter) Nodes() v1.NodeInterface {
	ret := _m.Called()

	var r0 v1.NodeInterface
	if rf, ok := ret.Get(0).(func() v1.NodeInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.NodeInterface)
		}
	}

	return r0
}

// NodesGetter_Nodes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Nodes'
type NodesGetter_Nodes_Call struct {
	*mock.Call
}

// Nodes is a helper method to define mock.On call
func (_e *NodesGetter_Expecter) Nodes() *NodesGetter_Nodes_Call {
	return &NodesGetter_Nodes_Call{Call: _e.mock.On("Nodes")}
}

func (_c *NodesGetter_Nodes_Call) Run(run func()) *NodesGetter_Nodes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *NodesGetter_Nodes_Call) Return(_a0 v1.NodeInterface) *NodesGetter_Nodes_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *NodesGetter_Nodes_Call) RunAndReturn(run func() v1.NodeInterface) *NodesGetter_Nodes_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewNodesGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewNodesGetter creates a new instance of NodesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNodesGetter(t mockConstructorTestingTNewNodesGetter) *NodesGetter {
	mock := &NodesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
