// Code generated by mockery v2.23.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	rest "k8s.io/client-go/rest"

	v1beta1 "k8s.io/client-go/kubernetes/typed/authorization/v1beta1"
)

// AuthorizationV1beta1Interface is an autogenerated mock type for the AuthorizationV1beta1Interface type
type AuthorizationV1beta1Interface struct {
	mock.Mock
}

type AuthorizationV1beta1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *AuthorizationV1beta1Interface) EXPECT() *AuthorizationV1beta1Interface_Expecter {
	return &AuthorizationV1beta1Interface_Expecter{mock: &_m.Mock}
}

// LocalSubjectAccessReviews provides a mock function with given fields: namespace
func (_m *AuthorizationV1beta1Interface) LocalSubjectAccessReviews(namespace string) v1beta1.LocalSubjectAccessReviewInterface {
	ret := _m.Called(namespace)

	var r0 v1beta1.LocalSubjectAccessReviewInterface
	if rf, ok := ret.Get(0).(func(string) v1beta1.LocalSubjectAccessReviewInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.LocalSubjectAccessReviewInterface)
		}
	}

	return r0
}

// AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LocalSubjectAccessReviews'
type AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call struct {
	*mock.Call
}

// LocalSubjectAccessReviews is a helper method to define mock.On call
//   - namespace string
func (_e *AuthorizationV1beta1Interface_Expecter) LocalSubjectAccessReviews(namespace interface{}) *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call {
	return &AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call{Call: _e.mock.On("LocalSubjectAccessReviews", namespace)}
}

func (_c *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call) Run(run func(namespace string)) *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call) Return(_a0 v1beta1.LocalSubjectAccessReviewInterface) *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call) RunAndReturn(run func(string) v1beta1.LocalSubjectAccessReviewInterface) *AuthorizationV1beta1Interface_LocalSubjectAccessReviews_Call {
	_c.Call.Return(run)
	return _c
}

// RESTClient provides a mock function with given fields:
func (_m *AuthorizationV1beta1Interface) RESTClient() rest.Interface {
	ret := _m.Called()

	var r0 rest.Interface
	if rf, ok := ret.Get(0).(func() rest.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rest.Interface)
		}
	}

	return r0
}

// AuthorizationV1beta1Interface_RESTClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RESTClient'
type AuthorizationV1beta1Interface_RESTClient_Call struct {
	*mock.Call
}

// RESTClient is a helper method to define mock.On call
func (_e *AuthorizationV1beta1Interface_Expecter) RESTClient() *AuthorizationV1beta1Interface_RESTClient_Call {
	return &AuthorizationV1beta1Interface_RESTClient_Call{Call: _e.mock.On("RESTClient")}
}

func (_c *AuthorizationV1beta1Interface_RESTClient_Call) Run(run func()) *AuthorizationV1beta1Interface_RESTClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AuthorizationV1beta1Interface_RESTClient_Call) Return(_a0 rest.Interface) *AuthorizationV1beta1Interface_RESTClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuthorizationV1beta1Interface_RESTClient_Call) RunAndReturn(run func() rest.Interface) *AuthorizationV1beta1Interface_RESTClient_Call {
	_c.Call.Return(run)
	return _c
}

// SelfSubjectAccessReviews provides a mock function with given fields:
func (_m *AuthorizationV1beta1Interface) SelfSubjectAccessReviews() v1beta1.SelfSubjectAccessReviewInterface {
	ret := _m.Called()

	var r0 v1beta1.SelfSubjectAccessReviewInterface
	if rf, ok := ret.Get(0).(func() v1beta1.SelfSubjectAccessReviewInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.SelfSubjectAccessReviewInterface)
		}
	}

	return r0
}

// AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SelfSubjectAccessReviews'
type AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call struct {
	*mock.Call
}

// SelfSubjectAccessReviews is a helper method to define mock.On call
func (_e *AuthorizationV1beta1Interface_Expecter) SelfSubjectAccessReviews() *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call {
	return &AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call{Call: _e.mock.On("SelfSubjectAccessReviews")}
}

func (_c *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call) Run(run func()) *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call) Return(_a0 v1beta1.SelfSubjectAccessReviewInterface) *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call) RunAndReturn(run func() v1beta1.SelfSubjectAccessReviewInterface) *AuthorizationV1beta1Interface_SelfSubjectAccessReviews_Call {
	_c.Call.Return(run)
	return _c
}

// SelfSubjectRulesReviews provides a mock function with given fields:
func (_m *AuthorizationV1beta1Interface) SelfSubjectRulesReviews() v1beta1.SelfSubjectRulesReviewInterface {
	ret := _m.Called()

	var r0 v1beta1.SelfSubjectRulesReviewInterface
	if rf, ok := ret.Get(0).(func() v1beta1.SelfSubjectRulesReviewInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.SelfSubjectRulesReviewInterface)
		}
	}

	return r0
}

// AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SelfSubjectRulesReviews'
type AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call struct {
	*mock.Call
}

// SelfSubjectRulesReviews is a helper method to define mock.On call
func (_e *AuthorizationV1beta1Interface_Expecter) SelfSubjectRulesReviews() *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call {
	return &AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call{Call: _e.mock.On("SelfSubjectRulesReviews")}
}

func (_c *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call) Run(run func()) *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call) Return(_a0 v1beta1.SelfSubjectRulesReviewInterface) *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call) RunAndReturn(run func() v1beta1.SelfSubjectRulesReviewInterface) *AuthorizationV1beta1Interface_SelfSubjectRulesReviews_Call {
	_c.Call.Return(run)
	return _c
}

// SubjectAccessReviews provides a mock function with given fields:
func (_m *AuthorizationV1beta1Interface) SubjectAccessReviews() v1beta1.SubjectAccessReviewInterface {
	ret := _m.Called()

	var r0 v1beta1.SubjectAccessReviewInterface
	if rf, ok := ret.Get(0).(func() v1beta1.SubjectAccessReviewInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.SubjectAccessReviewInterface)
		}
	}

	return r0
}

// AuthorizationV1beta1Interface_SubjectAccessReviews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SubjectAccessReviews'
type AuthorizationV1beta1Interface_SubjectAccessReviews_Call struct {
	*mock.Call
}

// SubjectAccessReviews is a helper method to define mock.On call
func (_e *AuthorizationV1beta1Interface_Expecter) SubjectAccessReviews() *AuthorizationV1beta1Interface_SubjectAccessReviews_Call {
	return &AuthorizationV1beta1Interface_SubjectAccessReviews_Call{Call: _e.mock.On("SubjectAccessReviews")}
}

func (_c *AuthorizationV1beta1Interface_SubjectAccessReviews_Call) Run(run func()) *AuthorizationV1beta1Interface_SubjectAccessReviews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AuthorizationV1beta1Interface_SubjectAccessReviews_Call) Return(_a0 v1beta1.SubjectAccessReviewInterface) *AuthorizationV1beta1Interface_SubjectAccessReviews_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuthorizationV1beta1Interface_SubjectAccessReviews_Call) RunAndReturn(run func() v1beta1.SubjectAccessReviewInterface) *AuthorizationV1beta1Interface_SubjectAccessReviews_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewAuthorizationV1beta1Interface interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthorizationV1beta1Interface creates a new instance of AuthorizationV1beta1Interface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthorizationV1beta1Interface(t mockConstructorTestingTNewAuthorizationV1beta1Interface) *AuthorizationV1beta1Interface {
	mock := &AuthorizationV1beta1Interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
